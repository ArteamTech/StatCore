---
description:
globs:
alwaysApply: false
---
# StatCore 模组框架结构

## 项目概述
StatCore 是一个基于 Minecraft 1.21.5 + NeoForge 21.5.75 的属性系统重构模组，旨在重新设计原版属性计算逻辑，提供模块化扩展支持，并为其他模组提供清晰的 API 接口。

## 核心架构

### API 层
- **属性接口**：定义了属性的基本结构和行为
  - `StatAttribute`：属性基本接口
  - `AttributeModifier`：属性修改器接口
  - `AttributeInstance`：属性实例接口

### 核心实现层
- **属性系统**：
  - 属性注册表：管理所有注册的属性
  - 属性实例管理：为实体创建和管理属性实例
  - 修改器系统：应用和管理属性修改器

### 属性类型
- **核心属性**：
  - 生命值属性：玩家默认100，其他生物为原版生命值的5倍
  - 防御系统：包括物理防御、弹射物防御、爆炸防御、火焰防御和真实防御

### 计算系统
- **属性计算公式**：(基础值 + 所有加法修改器) × (1 + 所有乘法修改值)
- **防御计算公式**：防御值 / (防御值 + 100)

### 事件系统
- **属性事件**：
  - 属性变更事件
  - 属性同步事件
- **装备事件**：
  - 装备变更事件处理器

### 同步系统
- **立即同步管理器**：处理属性变更的实时同步

## 文件结构

### API 包
- `api/attributes/`：属性相关API接口
- `api/events/`：事件相关API接口
- `api/registry/`：注册相关API接口

### 核心包
- `core/attributes/`：属性核心实现
- `core/registry/`：注册系统实现
- `core/events/`：事件处理系统
- `core/sync/`：同步管理系统

### 属性包
- `attributes/`：具体属性实现
  - `CoreAttributes.kt`：属性统一入口点
  - `HealthAttributes.kt`：生命值属性实现
  - `DefenseAttributes.kt`：防御属性实现

### 命令包
- `commands/`：游戏内命令实现
  - `StatCommand.kt`：属性查看命令

### 工具包
- `util/`：工具类和辅助函数

## 开发规范
- 遵循KISS、DRY和YAGNI原则
- 所有用户可见文本必须通过本地化文件支持
- 所有代码必须包含适当的KDoc注释
- 核心API设计优先，实现跟随
